name: Sample Metrics
on:
  pull_request:
    types: [opened, reopened, synchronize, labeled, unlabeled]
    branches: [main]
    paths:
      - "component-samples/**"
      - "core-samples/**"
      - "core-tutorials/**"
      - "!core-samples/.metrics/**"
  workflow_dispatch:
concurrency:
  group: "sample-metrics-${{ github.event.pull_request.number || github.ref }}"
  cancel-in-progress: true
jobs:
  context:
    runs-on: ubuntu-22.04
    outputs:
      skip_zip: ${{ steps.push-zip.outputs.skip }}
      skip_metrics: ${{ steps.push-metrics.outputs.skip }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Check whether to push zip files
        id: push-zip
        if: github.event_name == 'pull_request'
        run: |
          # This step involves analyzing if any files changed in the branch, if so we'll create zip files
          # The scripts/create-zips.js file sets the folders that are used to create the zips
          current_branch=${{ github.head_ref }}
          # did any files change in component or core samples
          # compare against version before the last commit in the branch
          samples_changed=$(git diff --name-only ${{ github.head_ref }} ${{ github.base_ref }} -- "./core-samples" "./component-samples")
          if [ -z "$samples_changed" ]; then
            echo "no samples changed, skipping creation of zip files"
            echo "skip=true" >> $GITHUB_OUTPUT   
          else
            echo "samples changed: $samples_changed"
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Check whether to push sample metrics
        id: push-metrics
        if: github.event_name == 'pull_request'
        run: |
          # This step involves analyzing the package.json files changed in the branch, if so we'll build the samples
          # package.json files changed in the branch
          packages_changed=$(git diff --name-only "${{ github.head_ref }}" "${{ github.base_ref }}" -- "./core-samples/**/package.json")
          # metric files changed in the previous commit
          metrics_changed=$(git diff --name-only HEAD^ HEAD -- "./core-samples/.metrics/*.csv")
          if [ -z "$packages_changed" ]; then
            echo "no package.json files changed, skipping build analysis"
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "package.json files changed: $packages_changed"
            echo "analyzing builds"
            echo "skip=false" >> $GITHUB_OUTPUT
          fi
  analyze-builds:
    runs-on: ubuntu-22.04
    needs: [context]
    strategy:
      matrix:
        samples: ["jsapi-angular-cli", "jsapi-react", "jsapi-vue", "esbuild", "rollup", "webpack"]
    if: needs.context.outputs.skip_metrics == 'false' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: setup node
        uses: actions/setup-node@v4
        with:
          check-latest: true

      - name: install dependencies for sample metrics script
        working-directory: .github/scripts
        run: |
          npm i

      - name: run sample metrics script
        working-directory: .github/scripts
        env:
          SAMPLE_TARGET: ${{ matrix.samples }}
        run: |
          node analyze-single-build.js

      - uses: actions/upload-artifact@v4
        with:
          name: analysis-${{ matrix.samples }}
          path: .github/scripts/analysis-${{ matrix.samples }}.txt

  push-metrics-and-zips:
    runs-on: ubuntu-22.04
    needs: [analyze-builds, context]
    if: always() && needs.context.outputs.skip_zip == 'false' || needs.context.outputs.skip_metrics == 'false' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Setup up git config
        run: |
          git branch
          git status
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: create zip files
        if: needs.context.outputs.skip_zip == 'false' || github.event_name == 'workflow_dispatch'
        working-directory: .github/scripts
        run: |
          node create-zips.js

      - name: commit zip files
        if: needs.context.outputs.skip_zip == 'false' || github.event_name == 'workflow_dispatch'
        run: |
          git add zips

      - uses: actions/download-artifact@v4
        with:
          pattern: analysis-*.txt
          merge-multiple: true

      - run: ls

  errors:
    runs-on: ubuntu-latest
    needs: [push-metrics-and-zips]
    if: needs.push-metrics-or-zips.result == 'failure' && failure()
    steps:
      - name: Capture error
        run: |
          echo "Error in the build analysis"
